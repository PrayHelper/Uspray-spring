name: Deploy Backend on Development Server via Local Registry

on:
  workflow_dispatch:
  push:
    branches:
      - chore/v2-workflow

permissions:
  contents: read

env:
  HOST:     ${{ secrets.HOST }}
  USERNAME: ${{ secrets.USERNAME }}
  KEY:      ${{ secrets.SSH_KEY }}
  PORT:     ${{ secrets.PORT }}
  IMAGE_NAME: registry.uspray.kr/uspray-server-dev:latest
  CONTAINER_NAME: uspray-server-dev

jobs:
  deliver:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'

    - name: Make gradlew executable
      run: chmod +x ./gradlew   # Gradle 스크립트 파일에 실행 권한을 부여합니다.
      
    - name: Create application.yml
      run: |
        mkdir -p ./src/main/resources
        cd ./src/main/resources
        echo "${{ secrets.APPLICATION }}" >> ./application.yml

    - name: Create service-account-file.json
      run: |
        mkdir -p ./src/main/resources/firebase
        cd ./src/main/resources/firebase
        echo "${{ secrets.SERVICE_ACCOUNT_FILE }}" | base64 -d > service-account-file.json

    - name: Build with Gradle
      run: ./gradlew clean build

    - name: Docker image build and push
      run: |
        docker build -t ${{ env.IMAGE_NAME }} .
        docker push ${{ env.IMAGE_NAME }}

  deploy:
    needs: deliver
    runs-on: self-hosted
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Deploy Docker image
      run: |
        if [ ! -z "$(docker ps -q -f name=${{env.CONTAINER_NAME}})" ]; then
          docker stop ${{env.CONTAINER_NAME}}
          docker rm ${{env.CONTAINER_NAME}}
          docker rmi ${{env.IMAGE_NAME}}
        fi
        docker compose up -d